FROM apache/airflow:2.10.4

USER root

# Установка дополнительных системных зависимостей
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Создаем необходимые директории и устанавливаем права
RUN mkdir -p /opt/airflow/dags \
    && mkdir -p /opt/airflow/logs/scheduler \
    && mkdir -p /opt/airflow/logs/dag_processor \
    && mkdir -p /opt/airflow/logs/webserver \
    && mkdir -p /opt/airflow/logs/worker \
    && mkdir -p /opt/airflow/plugins \
    && mkdir -p /docker-entrypoint.d \
    && chown -R airflow:root /opt/airflow \
    && chmod -R 777 /opt/airflow

# Создаем скрипт для установки прав при запуске
RUN mkdir -p /docker-entrypoint.d && \
    cat > /docker-entrypoint.d/01-fix-permissions.sh << 'EOF'
#!/bin/bash
set -x
echo "=== Текущий пользователь при запуске ==="
id
whoami
echo "=== Создание директорий ==="
mkdir -p /opt/airflow/logs/scheduler
mkdir -p /opt/airflow/logs/dag_processor
mkdir -p /opt/airflow/logs/webserver
mkdir -p /opt/airflow/logs/worker
echo "=== Установка прав доступа ==="
chown -R airflow:root /opt/airflow
chmod -R 777 /opt/airflow
echo "=== Проверка прав доступа ==="
ls -la /opt/airflow
ls -la /opt/airflow/logs
EOF

RUN chmod +x /docker-entrypoint.d/01-fix-permissions.sh

# Переключаемся на пользователя airflow для установки Python пакетов
USER airflow
WORKDIR /opt/airflow

# Копируем requirements.txt и устанавливаем зависимости
COPY --chown=airflow:root requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Копируем файлы проекта
COPY --chown=airflow:root . .

# Установка переменных окружения
ENV AIRFLOW_HOME=/opt/airflow
ENV PYTHONPATH="/opt/airflow"

# Финальная проверка и установка прав
USER root
RUN chown -R airflow:root /opt/airflow \
    && chmod -R 777 /opt/airflow \
    && echo "=== Финальная проверка прав ===" \
    && ls -la /opt/airflow \
    && ls -la /opt/airflow/logs
USER airflow